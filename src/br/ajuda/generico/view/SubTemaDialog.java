/*
 *  Copyright (C) 2012 jacoboliveira
 * 
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * SubTemaDialog.java
 *
 * Created on 12/12/2012, 18:22:00
 */
package br.ajuda.generico.view;

import br.ajuda.generico.beansbinding.Bindings;
import br.ajuda.generico.controller.SubTemaController;
import br.ajuda.generico.controller.TemaController;
import br.ajuda.generico.entities.SubTema;
import br.ajuda.generico.entities.Tema;
import br.ajuda.generico.util.AbstractDialog;
import br.ajuda.generico.util.ComboBoxSupport;
import br.ajuda.generico.util.JMessageUtil;
import br.ajuda.generico.util.StringHelper;
import br.com.swing.componentes.personalizados.ui.ListaComFiltro;
import java.awt.Component;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.ListCellRenderer;

/**
 *
 * @author jacoboliveira
 */
public class SubTemaDialog extends AbstractDialog {

    private SubTemaController subTemaController;
    private TemaController temaController;
    private ComboBoxSupport<Tema> comboBoxSupport;
    private Tema itemDefaultCombo;

    /** Creates new form SubTemaDialog */
    public SubTemaDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        comboBoxSupport = new ComboBoxSupport<Tema>(temaCBox);


        temaCBox.setRenderer(new ListCellRenderer() {

            DefaultListCellRenderer defaultRenderer = new DefaultListCellRenderer();

            @Override
            public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                JLabel label = (JLabel) defaultRenderer.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);

                if (value instanceof Tema) {
                    Tema tema = (Tema) value;
                    label.setText(tema.getTitulo());
                    return label;
                }
                return label;
            }
        });
        Bindings.adicLigacao(tituloSubTemaTField, "text", null, String.class);
        Bindings.adicLigacao(descSubTemaTArea, "text", null, String.class);
        Bindings.adicLigacao(temaCBox, "selectedItem", itemDefaultCombo = new Tema(""), Tema.class);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tituloSubTemaTField = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descSubTemaTArea = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        temaCBox = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        fecharButton = new javax.swing.JButton();
        salvarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setName("jPanel1"); // NOI18N

        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        jLabel1.setText("Titulo:");
        jLabel1.setName("jLabel1"); // NOI18N
        jLabel1.setPreferredSize(new java.awt.Dimension(50, 14));
        jPanel2.add(jLabel1);

        tituloSubTemaTField.setName("titulo"); // NOI18N
        jPanel2.add(tituloSubTemaTField);

        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.LINE_AXIS));

        jLabel2.setText("Descrição:");
        jLabel2.setName("jLabel2"); // NOI18N
        jPanel3.add(jLabel2);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        descSubTemaTArea.setColumns(20);
        descSubTemaTArea.setRows(5);
        descSubTemaTArea.setName("descricao"); // NOI18N
        jScrollPane1.setViewportView(descSubTemaTArea);

        jPanel3.add(jScrollPane1);

        jPanel5.setName("jPanel5"); // NOI18N
        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.LINE_AXIS));

        jLabel3.setText("Tema:");
        jLabel3.setName("jLabel3"); // NOI18N
        jLabel3.setPreferredSize(new java.awt.Dimension(48, 14));
        jPanel5.add(jLabel3);

        temaCBox.setName("tema"); // NOI18N
        temaCBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                temaCBoxItemStateChanged(evt);
            }
        });
        jPanel5.add(temaCBox);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(41, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(39, 39, 39)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(183, Short.MAX_VALUE)))
        );

        jSeparator1.setName("jSeparator1"); // NOI18N

        jPanel4.setName("jPanel4"); // NOI18N
        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        fecharButton.setText("Fechar");
        fecharButton.setName("fecharButton"); // NOI18N
        fecharButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fecharButtonActionPerformed(evt);
            }
        });
        jPanel4.add(fecharButton);

        salvarButton.setText("Adicionar");
        salvarButton.setName("salvarButton"); // NOI18N
        salvarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarButtonActionPerformed(evt);
            }
        });
        jPanel4.add(salvarButton);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-419)/2, (screenSize.height-388)/2, 419, 388);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
//
//        try {
//            temaController = new TemaController();
//            subTemaController = new SubTemaController();
//            //inicializando combo
//            comboBoxSupport.addItensCombo(temaController.consultaLista(new Tema()));
//
//            //TODO verificar auto complete esta com problema, ele devolve string em vez da classe
//            //comboBoxSupport.activeAutoComplete("titulo");
//            if (controladorDespacho.getParam(MainFrame.OPER_SUBTEMA) != null
//                    && ((Integer) controladorDespacho.getParam(MainFrame.OPER_SUBTEMA)) == MainFrame.OPER_ALT_SUBTEMA) {
//                try {
//
//                    SubTema subTema = subTemaController.consultaUnicoRetorno((SubTema) controladorDespacho.getParam(MainFrame.OBJ_SUBTEMA));
//                    if (subTema == null) {
//                        throw new NullPointerException("Objeto 'tema' esta nulo! Tela:'" + getTitle() + "'");
//                    }
//                    tituloSubTemaTField.setText(subTema.getTitulo());
//                    descSubTemaTArea.setText(subTema.getDescricao());
//
//                    temaCBox.setSelectedItem(subTema.getTema());
//                    salvarButton.setText("Alterar");
//
//                } catch (Exception ex) {
//                    controladorDespacho.registraEexibe(ex);
//                }
//            } else if (controladorDespacho.getParam(MainFrame.OPER_SUBTEMA) != null
//                    && ((Integer) controladorDespacho.getParam(MainFrame.OPER_SUBTEMA)) == MainFrame.OPER_ADIC_SUBTEMA) {
//                temaCBox.setSelectedIndex(0);
//            }
//        } catch (Exception ex) {
//            controladorDespacho.registraEexibe(ex);
//        }

    }//GEN-LAST:event_formWindowOpened

    private void salvarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarButtonActionPerformed

//        try {
//
//            SubTema subTema = new SubTema();
//
//            int operacao = (Integer) controladorDespacho.getParam(MainFrame.OPER_SUBTEMA);
//
//            //se a operacao for adicionar o tema
//            if (operacao == MainFrame.OPER_ADIC_SUBTEMA) {
//                Bindings.analisarBean(subTema);
//                subTemaController.salvar(subTema);
//                //adiciono o tema na lista da janela principal
//       //         ((ListaComFiltro<SubTema>) controladorDespacho.getParam(MainFrame.COMP_ADIC_SUBTEMA_JLIST)).adicionarItem(subTema);
//                JMessageUtil.showSucessMessage(this, "SubTema:'"
//                        + StringHelper.getFraseStringLimitado(subTema.getTitulo(), 30) + "', inserido com sucesso!");
//                Bindings.limpar(SubTema.class);
//                temaCBox.setSelectedIndex(0);
//            } else {//senao altera o tema
//                subTema = (SubTema) controladorDespacho.getParam(MainFrame.OBJ_SUBTEMA);
//                Bindings.analisarBean(subTema);
//                subTemaController.alterar(subTema);
//                //altero o tema na lista da janela principal
//                ListaComFiltro<SubTema> adicTemaList = (ListaComFiltro) controladorDespacho.getParam(MainFrame.COMP_ADIC_SUBTEMA_JLIST);
//
//                adicTemaList.alterarItem(subTema, adicTemaList.getList().getSelectedIndex());
//
//                JMessageUtil.showSucessMessage(this, "SubTema:'"
//                        + StringHelper.getFraseStringLimitado(subTema.getTitulo(), 30) + "', alterado com sucesso!");
//
//                dispose();
//            }
//
//            tituloSubTemaTField.setRequestFocusEnabled(true);
//        } catch (Exception ex) {
//            this.controladorDespacho.registraEexibe(ex);
//        }

    }//GEN-LAST:event_salvarButtonActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed

        //remocao dos parametros
//        controladorDespacho.removerParam(MainFrame.OPER_SUBTEMA);
//        controladorDespacho.removerParam(MainFrame.OBJ_SUBTEMA);

    }//GEN-LAST:event_formWindowClosed

    private void fecharButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fecharButtonActionPerformed

        dispose();

    }//GEN-LAST:event_fecharButtonActionPerformed

    private void temaCBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_temaCBoxItemStateChanged

        

    }//GEN-LAST:event_temaCBoxItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                SubTemaDialog dialog = new SubTemaDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea descSubTemaTArea;
    private javax.swing.JButton fecharButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton salvarButton;
    private javax.swing.JComboBox temaCBox;
    private javax.swing.JTextField tituloSubTemaTField;
    // End of variables declaration//GEN-END:variables
}
